/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/slippi.glb --types --keepnames --instance --transform
*/

import * as THREE from 'three'
import React from 'react'
import {useGLTF} from '@react-three/drei'
import {GLTF} from 'three-stdlib'

type GLTFResult = GLTF & {
    nodes: {
        mesh0011: THREE.Mesh
        mesh00122: THREE.Mesh
        mesh0013: THREE.Mesh
        mesh0014: THREE.Mesh
        mesh0017: THREE.Mesh
        mesh0018: THREE.Mesh
        mesh0019: THREE.Mesh
        mesh0020: THREE.Mesh
        mesh00212: THREE.Mesh
        mesh0022: THREE.Mesh
        mesh00232: THREE.Mesh
        mesh00252: THREE.Mesh
        mesh00272: THREE.Mesh
        mesh0028: THREE.Mesh
        mesh0030: THREE.Mesh
        mesh0031: THREE.Mesh
        mesh00322: THREE.Mesh
        mesh0033: THREE.Mesh
        mesh0034: THREE.Mesh
        mesh0035: THREE.Mesh
        mesh00362: THREE.Mesh
        mesh0037: THREE.Mesh
        mesh00382: THREE.Mesh
        mesh00392: THREE.Mesh
    }
    materials: {
        colors: THREE.MeshStandardMaterial
        mesh0012mat: THREE.MeshStandardMaterial
        mesh0021mat: THREE.MeshStandardMaterial
        mesh0023mat: THREE.MeshStandardMaterial
        mesh0025mat: THREE.MeshStandardMaterial
        mesh0027mat: THREE.MeshStandardMaterial
    }
}

export default function Slippi(props: JSX.IntrinsicElements['group']) {
    const {nodes, materials} = useGLTF('slippi-transformed.glb') as unknown as GLTFResult
    return (
        <group {...props} dispose={null}>
            <mesh name="mesh0011" geometry={nodes.mesh0011.geometry} material={materials.colors}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh00122" geometry={nodes.mesh00122.geometry} material={materials.mesh0012mat}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh0013" geometry={nodes.mesh0013.geometry} material={materials.mesh0012mat}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh0014" geometry={nodes.mesh0014.geometry} material={materials.colors}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh0017" geometry={nodes.mesh0017.geometry} material={materials.colors}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh0018" geometry={nodes.mesh0018.geometry} material={materials.colors}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh0019" geometry={nodes.mesh0019.geometry} material={materials.mesh0012mat}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh0020" geometry={nodes.mesh0020.geometry} material={materials.colors}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh00212" geometry={nodes.mesh00212.geometry} material={materials.mesh0021mat}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh0022" geometry={nodes.mesh0022.geometry} material={materials.colors}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh00232" geometry={nodes.mesh00232.geometry} material={materials.mesh0023mat}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh00252" geometry={nodes.mesh00252.geometry} material={materials.mesh0025mat}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh00272" geometry={nodes.mesh00272.geometry} material={materials.mesh0027mat}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh0028" geometry={nodes.mesh0028.geometry} material={materials.mesh0027mat}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh0030" geometry={nodes.mesh0030.geometry} material={materials.mesh0027mat}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh0031" geometry={nodes.mesh0031.geometry} material={materials.mesh0027mat}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh00322" geometry={nodes.mesh00322.geometry} material={materials.mesh0012mat}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh0033" geometry={nodes.mesh0033.geometry} material={materials.mesh0012mat}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh0034" geometry={nodes.mesh0034.geometry} material={materials.mesh0012mat}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh0035" geometry={nodes.mesh0035.geometry} material={materials.mesh0012mat}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh00362" geometry={nodes.mesh00362.geometry} material={materials.mesh0021mat}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh0037" geometry={nodes.mesh0037.geometry} material={materials.mesh0021mat}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh00382" geometry={nodes.mesh00382.geometry} material={materials.mesh0027mat}
                  rotation={[Math.PI / 2, 0, 0]}/>
            <mesh name="mesh00392" geometry={nodes.mesh00392.geometry} material={materials.mesh0021mat}
                  rotation={[Math.PI / 2, 0, 0]}/>
        </group>
    )
}

useGLTF.preload('/slippi-transformed.glb')
