/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React from "react";
import {useGLTF} from "@react-three/drei";

export default function Slippi(props) {
    const {nodes, materials} = useGLTF("/slippi.glb");
    return (
        <group {...props} dispose={null}>
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh0011.geometry}
                material={materials.colors}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh0014.geometry}
                material={materials.colors}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh0017.geometry}
                material={materials.colors}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh0018.geometry}
                material={materials.colors}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh0020.geometry}
                material={materials.colors}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh0022.geometry}
                material={materials.colors}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh00122.geometry}
                material={materials.mesh0012mat}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh0013.geometry}
                material={materials.mesh0012mat}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh0019.geometry}
                material={materials.mesh0012mat}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh00322.geometry}
                material={materials.mesh0012mat}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh0033.geometry}
                material={materials.mesh0012mat}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh0034.geometry}
                material={materials.mesh0012mat}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh0035.geometry}
                material={materials.mesh0012mat}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh00212.geometry}
                material={materials.mesh0021mat}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh00362.geometry}
                material={materials.mesh0021mat}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh0037.geometry}
                material={materials.mesh0021mat}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh00392.geometry}
                material={materials.mesh0021mat}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh00232.geometry}
                material={materials.mesh0023mat}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh00252.geometry}
                material={materials.mesh0025mat}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh00272.geometry}
                material={materials.mesh0027mat}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh0028.geometry}
                material={materials.mesh0027mat}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh0030.geometry}
                material={materials.mesh0027mat}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh0031.geometry}
                material={materials.mesh0027mat}
                rotation={[Math.PI / 2, 0, 0]}
            />
            <mesh
                castShadow
                receiveShadow
                geometry={nodes.mesh00382.geometry}
                material={materials.mesh0027mat}
                rotation={[Math.PI / 2, 0, 0]}
            />
        </group>
    );
}

useGLTF.preload("/slippi.glb");
